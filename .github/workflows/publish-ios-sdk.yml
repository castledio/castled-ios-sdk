name: Publish IOS sdk on Cocoapods

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install Cocoapods
        run: gem install cocoapods

      - name: Deploy to Cocoapods
        run: |
          set -eo pipefail
          export LIB_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          TIMESTAMP=$(date +"%B %dth, %H:%M")
          SUCCESS_COUNT=0
          FAILURE_COUNT=0
          SUCCESS_LOGS=""
          FAILED_POD_SPECS=""

          publish_pod() {
            local POD_NAME=$1
            if pod lib lint "$POD_NAME.podspec" --allow-warnings && pod trunk push "$POD_NAME.podspec" --allow-warnings; then
              SUCCESS_COUNT=$((SUCCESS_COUNT+1))
              SUCCESS_LOGS+="üéâ  Congrats\n üöÄ  $POD_NAME ($LIB_VERSION) successfully published\n üìÖ  $TIMESTAMP\n üåé  https://cocoapods.org/pods/$POD_NAME\n üëç  Tell your friends!\n\n"
            else
              FAILURE_COUNT=$((FAILURE_COUNT+1))
              FAILED_POD_SPECS+="$POD_NAME\n"
            fi
          }

          # Lint and push all podspecs
          publish_pod "Castled"
          publish_pod "CastledInbox"
          publish_pod "CastledNotificationService"
          publish_pod "CastledNotificationContent"

          # Summary of results
          echo -e "Summary: $SUCCESS_COUNT succeeded, $FAILURE_COUNT failed\n"

          # Log successful podspecs
          if [ $SUCCESS_COUNT -gt 0 ]; then
            echo -e "$SUCCESS_LOGS"
          fi

          # Log failed podspecs if any
          if [ $FAILURE_COUNT -gt 0 ]; then
            echo -e "The following podspecs failed:‚ùå‚ùå‚ùå\n$FAILED_POD_SPECS"
          fi

          # Fail the job if all operations failed
          if [ $FAILURE_COUNT -eq 4 ]; then
            echo "All podspec operations failed. Failing the job."
            exit 1
          fi

        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
